Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition
    3                         | FunctionDeclaration
    4                         | Declaration
    5                         | FunctionsAndDeclarations FunctionDefinition
    6                         | FunctionsAndDeclarations FunctionDeclaration
    7                         | FunctionsAndDeclarations Declaration

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
   10             | LBRACE RBRACE

   11 DeclarationsAndStatements: DeclarationsAndStatements Statement
   12                          | DeclarationsAndStatements Declaration
   13                          | Statement
   14                          | Declaration

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   17 ParameterList: ParameterDeclaration
   18              | ParameterList COMMA ParameterDeclaration

   19 ParameterDeclaration: TypeSpec
   20                     | TypeSpec IDENTIFIER

   21 Declaration: TypeSpec Declarator Aux_Declaration SEMI
   22            | TypeSpec Declarator SEMI

   23 Aux_Declaration: COMMA Declarator
   24                | Aux_Declaration COMMA Declarator

   25 TypeSpec: CHAR
   26         | INT
   27         | VOID
   28         | SHORT
   29         | DOUBLE

   30 Declarator: IDENTIFIER
   31           | IDENTIFIER ASSIGN Expr

   32 Statement: Expr SEMI
   33          | SEMI
   34          | LBRACE RBRACE
   35          | LBRACE StatList RBRACE
   36          | IF LPAR Expr RPAR Statement
   37          | IF LPAR Expr RPAR Statement ELSE Statement
   38          | WHILE LPAR Expr RPAR Statement
   39          | RETURN SEMI
   40          | RETURN Expr SEMI

   41 StatList: Statement
   42         | StatList Statement

   43 Expr: Expr ASSIGN Expr
   44     | Expr PLUS Expr
   45     | Expr MINUS Expr
   46     | Expr MUL Expr
   47     | Expr DIV Expr
   48     | Expr MOD Expr
   49     | Expr OR Expr
   50     | Expr AND Expr
   51     | Expr BITWISEAND Expr
   52     | Expr BITWISEOR Expr
   53     | Expr BITWISEXOR Expr
   54     | Expr EQ Expr
   55     | Expr NE Expr
   56     | Expr LE Expr
   57     | Expr GE Expr
   58     | Expr LT Expr
   59     | Expr GT Expr
   60     | PLUS Expr
   61     | MINUS Expr
   62     | NOT Expr
   63     | IDENTIFIER LPAR RPAR
   64     | IDENTIFIER LPAR Aux_Expr RPAR
   65     | IDENTIFIER
   66     | NATURAL
   67     | CHRLIT
   68     | DECIMAL
   69     | LPAR Expr RPAR

   70 Aux_Expr: Expr
   71         | Aux_Expr COMMA Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BITWISEAND (258) 51
    BITWISEOR (259) 52
    BITWISEXOR (260) 53
    AND (261) 50
    ASSIGN (262) 31 43
    MUL (263) 46
    COMMA (264) 18 23 24 71
    DIV (265) 47
    EQ (266) 54
    GE (267) 57
    GT (268) 59
    LBRACE (269) 9 10 34 35
    LE (270) 56
    LPAR (271) 16 36 37 38 63 64 69
    LT (272) 58
    MINUS (273) 45 61
    MOD (274) 48
    NE (275) 55
    NOT (276) 62
    OR (277) 49
    PLUS (278) 44 60
    RBRACE (279) 9 10 34 35
    RPAR (280) 16 36 37 38 63 64 69
    SEMI (281) 15 21 22 32 33 39 40
    CHAR (282) 25
    ELSE (283) 37
    WHILE (284) 38
    IF (285) 36 37
    INT (286) 26
    SHORT (287) 28
    DOUBLE (288) 29
    RETURN (289) 39 40
    VOID (290) 27
    CHRLIT <token> (291) 67
    IDENTIFIER <token> (292) 16 20 30 31 63 64 65
    NATURAL <token> (293) 66
    DECIMAL <token> (294) 68
    RESERVED <token> (295)
    LOW (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    Program <node> (43)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <node> (44)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    FunctionDefinition <node> (45)
        on left: 8
        on right: 2 5
    FunctionBody <node> (46)
        on left: 9 10
        on right: 8
    DeclarationsAndStatements <node> (47)
        on left: 11 12 13 14
        on right: 9 11 12
    FunctionDeclaration <node> (48)
        on left: 15
        on right: 3 6
    FunctionDeclarator <node> (49)
        on left: 16
        on right: 8 15
    ParameterList <node> (50)
        on left: 17 18
        on right: 16 18
    ParameterDeclaration <node> (51)
        on left: 19 20
        on right: 17 18
    Declaration <node> (52)
        on left: 21 22
        on right: 4 7 12 14
    Aux_Declaration <node> (53)
        on left: 23 24
        on right: 21 24
    TypeSpec <node> (54)
        on left: 25 26 27 28 29
        on right: 8 15 19 20 21 22
    Declarator <node> (55)
        on left: 30 31
        on right: 21 22 23 24
    Statement <node> (56)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 11 13 36 37 38 41 42
    StatList <node> (57)
        on left: 41 42
        on right: 35 42
    Expr <node> (58)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
        on right: 31 32 36 37 38 40 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 69 70 71
    Aux_Expr <node> (59)
        on left: 70 71
        on right: 64 71


State 0

    0 $accept: • Program $end
    1 Program: • FunctionsAndDeclarations
    2 FunctionsAndDeclarations: • FunctionDefinition
    3                         | • FunctionDeclaration
    4                         | • Declaration
    5                         | • FunctionsAndDeclarations FunctionDefinition
    6                         | • FunctionsAndDeclarations FunctionDeclaration
    7                         | • FunctionsAndDeclarations Declaration
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator Aux_Declaration SEMI
   22            | • TypeSpec Declarator SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    Program                   go to state 6
    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   25 TypeSpec: CHAR •

    $default  reduce using rule 25 (TypeSpec)


State 2

   26 TypeSpec: INT •

    $default  reduce using rule 26 (TypeSpec)


State 3

   28 TypeSpec: SHORT •

    $default  reduce using rule 28 (TypeSpec)


State 4

   29 TypeSpec: DOUBLE •

    $default  reduce using rule 29 (TypeSpec)


State 5

   27 TypeSpec: VOID •

    $default  reduce using rule 27 (TypeSpec)


State 6

    0 $accept: Program • $end

    $end  shift, and go to state 12


State 7

    1 Program: FunctionsAndDeclarations •  [$end]
    5 FunctionsAndDeclarations: FunctionsAndDeclarations • FunctionDefinition
    6                         | FunctionsAndDeclarations • FunctionDeclaration
    7                         | FunctionsAndDeclarations • Declaration
    8 FunctionDefinition: • TypeSpec FunctionDeclarator FunctionBody
   15 FunctionDeclaration: • TypeSpec FunctionDeclarator SEMI
   21 Declaration: • TypeSpec Declarator Aux_Declaration SEMI
   22            | • TypeSpec Declarator SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    $default  reduce using rule 1 (Program)

    FunctionDefinition   go to state 13
    FunctionDeclaration  go to state 14
    Declaration          go to state 15
    TypeSpec             go to state 11


State 8

    2 FunctionsAndDeclarations: FunctionDefinition •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 9

    3 FunctionsAndDeclarations: FunctionDeclaration •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 10

    4 FunctionsAndDeclarations: Declaration •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 11

    8 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   15 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   16 FunctionDeclarator: • IDENTIFIER LPAR ParameterList RPAR
   21 Declaration: TypeSpec • Declarator Aux_Declaration SEMI
   22            | TypeSpec • Declarator SEMI
   30 Declarator: • IDENTIFIER
   31           | • IDENTIFIER ASSIGN Expr

    IDENTIFIER  shift, and go to state 16

    FunctionDeclarator  go to state 17
    Declarator          go to state 18


State 12

    0 $accept: Program $end •

    $default  accept


State 13

    5 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition •

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 14

    6 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration •

    $default  reduce using rule 6 (FunctionsAndDeclarations)


State 15

    7 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration •

    $default  reduce using rule 7 (FunctionsAndDeclarations)


State 16

   16 FunctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   30 Declarator: IDENTIFIER •  [COMMA, SEMI]
   31           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 19
    LPAR    shift, and go to state 20

    $default  reduce using rule 30 (Declarator)


State 17

    8 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
    9 FunctionBody: • LBRACE DeclarationsAndStatements RBRACE
   10             | • LBRACE RBRACE
   15 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    FunctionBody  go to state 23


State 18

   21 Declaration: TypeSpec Declarator • Aux_Declaration SEMI
   22            | TypeSpec Declarator • SEMI
   23 Aux_Declaration: • COMMA Declarator
   24                | • Aux_Declaration COMMA Declarator

    COMMA  shift, and go to state 24
    SEMI   shift, and go to state 25

    Aux_Declaration  go to state 26


State 19

   31 Declarator: IDENTIFIER ASSIGN • Expr
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 35


State 20

   16 FunctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR
   17 ParameterList: • ParameterDeclaration
   18              | • ParameterList COMMA ParameterDeclaration
   19 ParameterDeclaration: • TypeSpec
   20                     | • TypeSpec IDENTIFIER
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterList         go to state 36
    ParameterDeclaration  go to state 37
    TypeSpec              go to state 38


State 21

    9 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE
   10             | LBRACE • RBRACE
   11 DeclarationsAndStatements: • DeclarationsAndStatements Statement
   12                          | • DeclarationsAndStatements Declaration
   13                          | • Statement
   14                          | • Declaration
   21 Declaration: • TypeSpec Declarator Aux_Declaration SEMI
   22            | • TypeSpec Declarator SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE
   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    RBRACE      shift, and go to state 40
    SEMI        shift, and go to state 41
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 44
    VOID        shift, and go to state 5
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    DeclarationsAndStatements  go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 22

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 15 (FunctionDeclaration)


State 23

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 8 (FunctionDefinition)


State 24

   23 Aux_Declaration: COMMA • Declarator
   30 Declarator: • IDENTIFIER
   31           | • IDENTIFIER ASSIGN Expr

    IDENTIFIER  shift, and go to state 50

    Declarator  go to state 51


State 25

   22 Declaration: TypeSpec Declarator SEMI •

    $default  reduce using rule 22 (Declaration)


State 26

   21 Declaration: TypeSpec Declarator Aux_Declaration • SEMI
   24 Aux_Declaration: Aux_Declaration • COMMA Declarator

    COMMA  shift, and go to state 52
    SEMI   shift, and go to state 53


State 27

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR
   69     | LPAR • Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 54


State 28

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   61     | MINUS • Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 55


State 29

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   62     | NOT • Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 56


State 30

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   60     | PLUS • Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 57


State 31

   67 Expr: CHRLIT •

    $default  reduce using rule 67 (Expr)


State 32

   63 Expr: IDENTIFIER • LPAR RPAR
   64     | IDENTIFIER • LPAR Aux_Expr RPAR
   65     | IDENTIFIER •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]

    LPAR  shift, and go to state 58

    $default  reduce using rule 65 (Expr)


State 33

   66 Expr: NATURAL •

    $default  reduce using rule 66 (Expr)


State 34

   68 Expr: DECIMAL •

    $default  reduce using rule 68 (Expr)


State 35

   31 Declarator: IDENTIFIER ASSIGN Expr •  [COMMA, SEMI]
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75

    $default  reduce using rule 31 (Declarator)


State 36

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR
   18 ParameterList: ParameterList • COMMA ParameterDeclaration

    COMMA  shift, and go to state 76
    RPAR   shift, and go to state 77


State 37

   17 ParameterList: ParameterDeclaration •

    $default  reduce using rule 17 (ParameterList)


State 38

   19 ParameterDeclaration: TypeSpec •  [COMMA, RPAR]
   20                     | TypeSpec • IDENTIFIER

    IDENTIFIER  shift, and go to state 78

    $default  reduce using rule 19 (ParameterDeclaration)


State 39

   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   34          | LBRACE • RBRACE
   35          | • LBRACE StatList RBRACE
   35          | LBRACE • StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   41 StatList: • Statement
   42         | • StatList Statement
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    RBRACE      shift, and go to state 79
    SEMI        shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Statement  go to state 80
    StatList   go to state 81
    Expr       go to state 49


State 40

   10 FunctionBody: LBRACE RBRACE •

    $default  reduce using rule 10 (FunctionBody)


State 41

   33 Statement: SEMI •

    $default  reduce using rule 33 (Statement)


State 42

   38 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 82


State 43

   36 Statement: IF • LPAR Expr RPAR Statement
   37          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 83


State 44

   39 Statement: RETURN • SEMI
   40          | RETURN • Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    SEMI        shift, and go to state 84
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 85


State 45

    9 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE
   11 DeclarationsAndStatements: DeclarationsAndStatements • Statement
   12                          | DeclarationsAndStatements • Declaration
   21 Declaration: • TypeSpec Declarator Aux_Declaration SEMI
   22            | • TypeSpec Declarator SEMI
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE
   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    RBRACE      shift, and go to state 86
    SEMI        shift, and go to state 41
    CHAR        shift, and go to state 1
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    INT         shift, and go to state 2
    SHORT       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    RETURN      shift, and go to state 44
    VOID        shift, and go to state 5
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Declaration  go to state 87
    TypeSpec     go to state 47
    Statement    go to state 88
    Expr         go to state 49


State 46

   14 DeclarationsAndStatements: Declaration •

    $default  reduce using rule 14 (DeclarationsAndStatements)


State 47

   21 Declaration: TypeSpec • Declarator Aux_Declaration SEMI
   22            | TypeSpec • Declarator SEMI
   30 Declarator: • IDENTIFIER
   31           | • IDENTIFIER ASSIGN Expr

    IDENTIFIER  shift, and go to state 50

    Declarator  go to state 18


State 48

   13 DeclarationsAndStatements: Statement •

    $default  reduce using rule 13 (DeclarationsAndStatements)


State 49

   32 Statement: Expr • SEMI
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    SEMI        shift, and go to state 89


State 50

   30 Declarator: IDENTIFIER •  [COMMA, SEMI]
   31           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 19

    $default  reduce using rule 30 (Declarator)


State 51

   23 Aux_Declaration: COMMA Declarator •

    $default  reduce using rule 23 (Aux_Declaration)


State 52

   24 Aux_Declaration: Aux_Declaration COMMA • Declarator
   30 Declarator: • IDENTIFIER
   31           | • IDENTIFIER ASSIGN Expr

    IDENTIFIER  shift, and go to state 50

    Declarator  go to state 90


State 53

   21 Declaration: TypeSpec Declarator Aux_Declaration SEMI •

    $default  reduce using rule 21 (Declaration)


State 54

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   69     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    RPAR        shift, and go to state 91


State 55

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   61     | MINUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 72

    $default  reduce using rule 61 (Expr)

    Conflict between rule 61 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 61 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 61 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 61 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 61 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 61 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 61 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 61 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 61 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 61 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 61 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 61 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 61 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 61 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 61 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 61 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 61 and token PLUS resolved as reduce (%left PLUS).


State 56

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   62     | NOT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]

    $default  reduce using rule 62 (Expr)

    Conflict between rule 62 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 62 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 62 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 62 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 62 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 62 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 62 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 62 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 62 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 62 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 62 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 62 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 62 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 62 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 62 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 62 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 62 and token PLUS resolved as reduce (PLUS < NOT).


State 57

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   60     | PLUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 72

    $default  reduce using rule 60 (Expr)

    Conflict between rule 60 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 60 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 60 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 60 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 60 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 60 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 60 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 60 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 60 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 60 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 60 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 60 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 60 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 60 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 60 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 60 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 60 and token PLUS resolved as reduce (%left PLUS).


State 58

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   63     | IDENTIFIER LPAR • RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   64     | IDENTIFIER LPAR • Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR
   70 Aux_Expr: • Expr
   71         | • Aux_Expr COMMA Expr

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    RPAR        shift, and go to state 92
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr      go to state 93
    Aux_Expr  go to state 94


State 59

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   51     | Expr BITWISEAND • Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 95


State 60

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   52     | Expr BITWISEOR • Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 96


State 61

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   53     | Expr BITWISEXOR • Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 97


State 62

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   50     | Expr AND • Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 98


State 63

   43 Expr: • Expr ASSIGN Expr
   43     | Expr ASSIGN • Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 99


State 64

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   46     | Expr MUL • Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 100


State 65

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   47     | Expr DIV • Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 101


State 66

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   54     | Expr EQ • Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 102


State 67

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   57     | Expr GE • Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 103


State 68

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   59     | Expr GT • Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 104


State 69

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   56     | Expr LE • Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 105


State 70

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   58     | Expr LT • Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 106


State 71

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   45     | Expr MINUS • Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 107


State 72

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   48     | Expr MOD • Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 108


State 73

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   55     | Expr NE • Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 109


State 74

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   49     | Expr OR • Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 110


State 75

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   44     | Expr PLUS • Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 111


State 76

   18 ParameterList: ParameterList COMMA • ParameterDeclaration
   19 ParameterDeclaration: • TypeSpec
   20                     | • TypeSpec IDENTIFIER
   25 TypeSpec: • CHAR
   26         | • INT
   27         | • VOID
   28         | • SHORT
   29         | • DOUBLE

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5

    ParameterDeclaration  go to state 112
    TypeSpec              go to state 38


State 77

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 16 (FunctionDeclarator)


State 78

   20 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 20 (ParameterDeclaration)


State 79

   34 Statement: LBRACE RBRACE •

    $default  reduce using rule 34 (Statement)


State 80

   41 StatList: Statement •

    $default  reduce using rule 41 (StatList)


State 81

   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   35          | LBRACE StatList • RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   42 StatList: StatList • Statement
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    RBRACE      shift, and go to state 113
    SEMI        shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Statement  go to state 114
    Expr       go to state 49


State 82

   38 Statement: WHILE LPAR • Expr RPAR Statement
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 115


State 83

   36 Statement: IF LPAR • Expr RPAR Statement
   37          | IF LPAR • Expr RPAR Statement ELSE Statement
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 116


State 84

   39 Statement: RETURN SEMI •

    $default  reduce using rule 39 (Statement)


State 85

   40 Statement: RETURN Expr • SEMI
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    SEMI        shift, and go to state 117


State 86

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 9 (FunctionBody)


State 87

   12 DeclarationsAndStatements: DeclarationsAndStatements Declaration •

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 88

   11 DeclarationsAndStatements: DeclarationsAndStatements Statement •

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 89

   32 Statement: Expr SEMI •

    $default  reduce using rule 32 (Statement)


State 90

   24 Aux_Declaration: Aux_Declaration COMMA Declarator •

    $default  reduce using rule 24 (Aux_Declaration)


State 91

   69 Expr: LPAR Expr RPAR •

    $default  reduce using rule 69 (Expr)


State 92

   63 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 63 (Expr)


State 93

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   70 Aux_Expr: Expr •  [COMMA, RPAR]

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75

    $default  reduce using rule 70 (Aux_Expr)


State 94

   64 Expr: IDENTIFIER LPAR Aux_Expr • RPAR
   71 Aux_Expr: Aux_Expr • COMMA Expr

    COMMA  shift, and go to state 118
    RPAR   shift, and go to state 119


State 95

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   51     | Expr BITWISEAND Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    EQ     shift, and go to state 66
    GE     shift, and go to state 67
    GT     shift, and go to state 68
    LE     shift, and go to state 69
    LT     shift, and go to state 70
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    NE     shift, and go to state 73
    PLUS   shift, and go to state 75

    $default  reduce using rule 51 (Expr)

    Conflict between rule 51 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 51 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 51 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 51 and token AND resolved as reduce (AND < BITWISEAND).
    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < BITWISEAND).
    Conflict between rule 51 and token MUL resolved as shift (BITWISEAND < MUL).
    Conflict between rule 51 and token DIV resolved as shift (BITWISEAND < DIV).
    Conflict between rule 51 and token EQ resolved as shift (BITWISEAND < EQ).
    Conflict between rule 51 and token GE resolved as shift (BITWISEAND < GE).
    Conflict between rule 51 and token GT resolved as shift (BITWISEAND < GT).
    Conflict between rule 51 and token LE resolved as shift (BITWISEAND < LE).
    Conflict between rule 51 and token LT resolved as shift (BITWISEAND < LT).
    Conflict between rule 51 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 51 and token MOD resolved as shift (BITWISEAND < MOD).
    Conflict between rule 51 and token NE resolved as shift (BITWISEAND < NE).
    Conflict between rule 51 and token OR resolved as reduce (OR < BITWISEAND).
    Conflict between rule 51 and token PLUS resolved as shift (BITWISEAND < PLUS).


State 96

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   52     | Expr BITWISEOR Expr •  [BITWISEOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEXOR  shift, and go to state 61
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    PLUS        shift, and go to state 75

    $default  reduce using rule 52 (Expr)

    Conflict between rule 52 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 52 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 52 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 52 and token AND resolved as reduce (AND < BITWISEOR).
    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < BITWISEOR).
    Conflict between rule 52 and token MUL resolved as shift (BITWISEOR < MUL).
    Conflict between rule 52 and token DIV resolved as shift (BITWISEOR < DIV).
    Conflict between rule 52 and token EQ resolved as shift (BITWISEOR < EQ).
    Conflict between rule 52 and token GE resolved as shift (BITWISEOR < GE).
    Conflict between rule 52 and token GT resolved as shift (BITWISEOR < GT).
    Conflict between rule 52 and token LE resolved as shift (BITWISEOR < LE).
    Conflict between rule 52 and token LT resolved as shift (BITWISEOR < LT).
    Conflict between rule 52 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 52 and token MOD resolved as shift (BITWISEOR < MOD).
    Conflict between rule 52 and token NE resolved as shift (BITWISEOR < NE).
    Conflict between rule 52 and token OR resolved as reduce (OR < BITWISEOR).
    Conflict between rule 52 and token PLUS resolved as shift (BITWISEOR < PLUS).


State 97

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   53     | Expr BITWISEXOR Expr •  [BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    PLUS        shift, and go to state 75

    $default  reduce using rule 53 (Expr)

    Conflict between rule 53 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 53 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 53 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 53 and token AND resolved as reduce (AND < BITWISEXOR).
    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < BITWISEXOR).
    Conflict between rule 53 and token MUL resolved as shift (BITWISEXOR < MUL).
    Conflict between rule 53 and token DIV resolved as shift (BITWISEXOR < DIV).
    Conflict between rule 53 and token EQ resolved as shift (BITWISEXOR < EQ).
    Conflict between rule 53 and token GE resolved as shift (BITWISEXOR < GE).
    Conflict between rule 53 and token GT resolved as shift (BITWISEXOR < GT).
    Conflict between rule 53 and token LE resolved as shift (BITWISEXOR < LE).
    Conflict between rule 53 and token LT resolved as shift (BITWISEXOR < LT).
    Conflict between rule 53 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 53 and token MOD resolved as shift (BITWISEXOR < MOD).
    Conflict between rule 53 and token NE resolved as shift (BITWISEXOR < NE).
    Conflict between rule 53 and token OR resolved as reduce (OR < BITWISEXOR).
    Conflict between rule 53 and token PLUS resolved as shift (BITWISEXOR < PLUS).


State 98

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   50     | Expr AND Expr •  [AND, ASSIGN, COMMA, OR, RPAR, SEMI]
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    PLUS        shift, and go to state 75

    $default  reduce using rule 50 (Expr)

    Conflict between rule 50 and token BITWISEAND resolved as shift (AND < BITWISEAND).
    Conflict between rule 50 and token BITWISEOR resolved as shift (AND < BITWISEOR).
    Conflict between rule 50 and token BITWISEXOR resolved as shift (AND < BITWISEXOR).
    Conflict between rule 50 and token AND resolved as reduce (%left AND).
    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 50 and token MUL resolved as shift (AND < MUL).
    Conflict between rule 50 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 50 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 50 and token GE resolved as shift (AND < GE).
    Conflict between rule 50 and token GT resolved as shift (AND < GT).
    Conflict between rule 50 and token LE resolved as shift (AND < LE).
    Conflict between rule 50 and token LT resolved as shift (AND < LT).
    Conflict between rule 50 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 50 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 50 and token NE resolved as shift (AND < NE).
    Conflict between rule 50 and token OR resolved as reduce (OR < AND).
    Conflict between rule 50 and token PLUS resolved as shift (AND < PLUS).


State 99

   43 Expr: Expr • ASSIGN Expr
   43     | Expr ASSIGN Expr •  [COMMA, RPAR, SEMI]
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75

    $default  reduce using rule 43 (Expr)

    Conflict between rule 43 and token BITWISEAND resolved as shift (ASSIGN < BITWISEAND).
    Conflict between rule 43 and token BITWISEOR resolved as shift (ASSIGN < BITWISEOR).
    Conflict between rule 43 and token BITWISEXOR resolved as shift (ASSIGN < BITWISEXOR).
    Conflict between rule 43 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 43 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 43 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 43 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 43 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 43 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 43 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 43 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 43 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 43 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 43 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 43 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 43 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 43 and token PLUS resolved as shift (ASSIGN < PLUS).


State 100

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   46     | Expr MUL Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    $default  reduce using rule 46 (Expr)

    Conflict between rule 46 and token BITWISEAND resolved as reduce (BITWISEAND < MUL).
    Conflict between rule 46 and token BITWISEOR resolved as reduce (BITWISEOR < MUL).
    Conflict between rule 46 and token BITWISEXOR resolved as reduce (BITWISEXOR < MUL).
    Conflict between rule 46 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 46 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 46 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 46 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 46 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 46 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 46 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 46 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 46 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 46 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 46 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 46 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 46 and token PLUS resolved as reduce (PLUS < MUL).


State 101

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   47     | Expr DIV Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    $default  reduce using rule 47 (Expr)

    Conflict between rule 47 and token BITWISEAND resolved as reduce (BITWISEAND < DIV).
    Conflict between rule 47 and token BITWISEOR resolved as reduce (BITWISEOR < DIV).
    Conflict between rule 47 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIV).
    Conflict between rule 47 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 47 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 47 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 47 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 47 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 47 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 47 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 47 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 47 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 47 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 47 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 47 and token PLUS resolved as reduce (PLUS < DIV).


State 102

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   54     | Expr EQ Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR, SEMI]
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    GE     shift, and go to state 67
    GT     shift, and go to state 68
    LE     shift, and go to state 69
    LT     shift, and go to state 70
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 54 (Expr)

    Conflict between rule 54 and token BITWISEAND resolved as reduce (BITWISEAND < EQ).
    Conflict between rule 54 and token BITWISEOR resolved as reduce (BITWISEOR < EQ).
    Conflict between rule 54 and token BITWISEXOR resolved as reduce (BITWISEXOR < EQ).
    Conflict between rule 54 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 54 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 54 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 54 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 54 and token GE resolved as shift (EQ < GE).
    Conflict between rule 54 and token GT resolved as shift (EQ < GT).
    Conflict between rule 54 and token LE resolved as shift (EQ < LE).
    Conflict between rule 54 and token LT resolved as shift (EQ < LT).
    Conflict between rule 54 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 54 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 54 and token NE resolved as reduce (%left NE).
    Conflict between rule 54 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 54 and token PLUS resolved as shift (EQ < PLUS).


State 103

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   57     | Expr GE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 57 (Expr)

    Conflict between rule 57 and token BITWISEAND resolved as reduce (BITWISEAND < GE).
    Conflict between rule 57 and token BITWISEOR resolved as reduce (BITWISEOR < GE).
    Conflict between rule 57 and token BITWISEXOR resolved as reduce (BITWISEXOR < GE).
    Conflict between rule 57 and token AND resolved as reduce (AND < GE).
    Conflict between rule 57 and token ASSIGN resolved as reduce (ASSIGN < GE).
    Conflict between rule 57 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 57 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 57 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 57 and token GE resolved as reduce (%left GE).
    Conflict between rule 57 and token GT resolved as reduce (%left GT).
    Conflict between rule 57 and token LE resolved as reduce (%left LE).
    Conflict between rule 57 and token LT resolved as reduce (%left LT).
    Conflict between rule 57 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 57 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 57 and token NE resolved as reduce (NE < GE).
    Conflict between rule 57 and token OR resolved as reduce (OR < GE).
    Conflict between rule 57 and token PLUS resolved as shift (GE < PLUS).


State 104

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   59     | Expr GT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 59 (Expr)

    Conflict between rule 59 and token BITWISEAND resolved as reduce (BITWISEAND < GT).
    Conflict between rule 59 and token BITWISEOR resolved as reduce (BITWISEOR < GT).
    Conflict between rule 59 and token BITWISEXOR resolved as reduce (BITWISEXOR < GT).
    Conflict between rule 59 and token AND resolved as reduce (AND < GT).
    Conflict between rule 59 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 59 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 59 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 59 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 59 and token GE resolved as reduce (%left GE).
    Conflict between rule 59 and token GT resolved as reduce (%left GT).
    Conflict between rule 59 and token LE resolved as reduce (%left LE).
    Conflict between rule 59 and token LT resolved as reduce (%left LT).
    Conflict between rule 59 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 59 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 59 and token NE resolved as reduce (NE < GT).
    Conflict between rule 59 and token OR resolved as reduce (OR < GT).
    Conflict between rule 59 and token PLUS resolved as shift (GT < PLUS).


State 105

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   56     | Expr LE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 56 (Expr)

    Conflict between rule 56 and token BITWISEAND resolved as reduce (BITWISEAND < LE).
    Conflict between rule 56 and token BITWISEOR resolved as reduce (BITWISEOR < LE).
    Conflict between rule 56 and token BITWISEXOR resolved as reduce (BITWISEXOR < LE).
    Conflict between rule 56 and token AND resolved as reduce (AND < LE).
    Conflict between rule 56 and token ASSIGN resolved as reduce (ASSIGN < LE).
    Conflict between rule 56 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 56 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 56 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 56 and token GE resolved as reduce (%left GE).
    Conflict between rule 56 and token GT resolved as reduce (%left GT).
    Conflict between rule 56 and token LE resolved as reduce (%left LE).
    Conflict between rule 56 and token LT resolved as reduce (%left LT).
    Conflict between rule 56 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 56 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 56 and token NE resolved as reduce (NE < LE).
    Conflict between rule 56 and token OR resolved as reduce (OR < LE).
    Conflict between rule 56 and token PLUS resolved as shift (LE < PLUS).


State 106

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   58     | Expr LT Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR, SEMI]
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 58 (Expr)

    Conflict between rule 58 and token BITWISEAND resolved as reduce (BITWISEAND < LT).
    Conflict between rule 58 and token BITWISEOR resolved as reduce (BITWISEOR < LT).
    Conflict between rule 58 and token BITWISEXOR resolved as reduce (BITWISEXOR < LT).
    Conflict between rule 58 and token AND resolved as reduce (AND < LT).
    Conflict between rule 58 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 58 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 58 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 58 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 58 and token GE resolved as reduce (%left GE).
    Conflict between rule 58 and token GT resolved as reduce (%left GT).
    Conflict between rule 58 and token LE resolved as reduce (%left LE).
    Conflict between rule 58 and token LT resolved as reduce (%left LT).
    Conflict between rule 58 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 58 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 58 and token NE resolved as reduce (NE < LT).
    Conflict between rule 58 and token OR resolved as reduce (OR < LT).
    Conflict between rule 58 and token PLUS resolved as shift (LT < PLUS).


State 107

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   45     | Expr MINUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 72

    $default  reduce using rule 45 (Expr)

    Conflict between rule 45 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 45 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 45 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 45 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 45 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 45 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 45 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 45 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 45 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 45 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 45 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 45 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 45 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 45 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 45 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 45 and token PLUS resolved as reduce (%left PLUS).


State 108

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   48     | Expr MOD Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR, SEMI]
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    $default  reduce using rule 48 (Expr)

    Conflict between rule 48 and token BITWISEAND resolved as reduce (BITWISEAND < MOD).
    Conflict between rule 48 and token BITWISEOR resolved as reduce (BITWISEOR < MOD).
    Conflict between rule 48 and token BITWISEXOR resolved as reduce (BITWISEXOR < MOD).
    Conflict between rule 48 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 48 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 48 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 48 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 48 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 48 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 48 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 48 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 48 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 48 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 48 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 48 and token PLUS resolved as reduce (PLUS < MOD).


State 109

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   55     | Expr NE Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR, SEMI]
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL    shift, and go to state 64
    DIV    shift, and go to state 65
    GE     shift, and go to state 67
    GT     shift, and go to state 68
    LE     shift, and go to state 69
    LT     shift, and go to state 70
    MINUS  shift, and go to state 71
    MOD    shift, and go to state 72
    PLUS   shift, and go to state 75

    $default  reduce using rule 55 (Expr)

    Conflict between rule 55 and token BITWISEAND resolved as reduce (BITWISEAND < NE).
    Conflict between rule 55 and token BITWISEOR resolved as reduce (BITWISEOR < NE).
    Conflict between rule 55 and token BITWISEXOR resolved as reduce (BITWISEXOR < NE).
    Conflict between rule 55 and token AND resolved as reduce (AND < NE).
    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 55 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 55 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 55 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 55 and token GE resolved as shift (NE < GE).
    Conflict between rule 55 and token GT resolved as shift (NE < GT).
    Conflict between rule 55 and token LE resolved as shift (NE < LE).
    Conflict between rule 55 and token LT resolved as shift (NE < LT).
    Conflict between rule 55 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 55 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 55 and token NE resolved as reduce (%left NE).
    Conflict between rule 55 and token OR resolved as reduce (OR < NE).
    Conflict between rule 55 and token PLUS resolved as shift (NE < PLUS).


State 110

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   49     | Expr OR Expr •  [ASSIGN, COMMA, OR, RPAR, SEMI]
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    PLUS        shift, and go to state 75

    $default  reduce using rule 49 (Expr)

    Conflict between rule 49 and token BITWISEAND resolved as shift (OR < BITWISEAND).
    Conflict between rule 49 and token BITWISEOR resolved as shift (OR < BITWISEOR).
    Conflict between rule 49 and token BITWISEXOR resolved as shift (OR < BITWISEXOR).
    Conflict between rule 49 and token AND resolved as shift (OR < AND).
    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 49 and token MUL resolved as shift (OR < MUL).
    Conflict between rule 49 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 49 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 49 and token GE resolved as shift (OR < GE).
    Conflict between rule 49 and token GT resolved as shift (OR < GT).
    Conflict between rule 49 and token LE resolved as shift (OR < LE).
    Conflict between rule 49 and token LT resolved as shift (OR < LT).
    Conflict between rule 49 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 49 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 49 and token NE resolved as shift (OR < NE).
    Conflict between rule 49 and token OR resolved as reduce (%left OR).
    Conflict between rule 49 and token PLUS resolved as shift (OR < PLUS).


State 111

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   44     | Expr PLUS Expr •  [BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR, SEMI]
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    MUL  shift, and go to state 64
    DIV  shift, and go to state 65
    MOD  shift, and go to state 72

    $default  reduce using rule 44 (Expr)

    Conflict between rule 44 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 44 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 44 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 44 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 44 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 44 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 44 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 44 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 44 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 44 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 44 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 44 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 44 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 44 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 44 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 44 and token PLUS resolved as reduce (%left PLUS).


State 112

   18 ParameterList: ParameterList COMMA ParameterDeclaration •

    $default  reduce using rule 18 (ParameterList)


State 113

   35 Statement: LBRACE StatList RBRACE •

    $default  reduce using rule 35 (Statement)


State 114

   42 StatList: StatList Statement •

    $default  reduce using rule 42 (StatList)


State 115

   38 Statement: WHILE LPAR Expr • RPAR Statement
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    RPAR        shift, and go to state 120


State 116

   36 Statement: IF LPAR Expr • RPAR Statement
   37          | IF LPAR Expr • RPAR Statement ELSE Statement
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75
    RPAR        shift, and go to state 121


State 117

   40 Statement: RETURN Expr SEMI •

    $default  reduce using rule 40 (Statement)


State 118

   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR
   71 Aux_Expr: Aux_Expr COMMA • Expr

    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Expr  go to state 122


State 119

   64 Expr: IDENTIFIER LPAR Aux_Expr RPAR •

    $default  reduce using rule 64 (Expr)


State 120

   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   38          | WHILE LPAR Expr RPAR • Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    SEMI        shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Statement  go to state 123
    Expr       go to state 49


State 121

   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   36          | IF LPAR Expr RPAR • Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   37          | IF LPAR Expr RPAR • Statement ELSE Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    SEMI        shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Statement  go to state 124
    Expr       go to state 49


State 122

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • PLUS Expr
   45     | Expr • MINUS Expr
   46     | Expr • MUL Expr
   47     | Expr • DIV Expr
   48     | Expr • MOD Expr
   49     | Expr • OR Expr
   50     | Expr • AND Expr
   51     | Expr • BITWISEAND Expr
   52     | Expr • BITWISEOR Expr
   53     | Expr • BITWISEXOR Expr
   54     | Expr • EQ Expr
   55     | Expr • NE Expr
   56     | Expr • LE Expr
   57     | Expr • GE Expr
   58     | Expr • LT Expr
   59     | Expr • GT Expr
   71 Aux_Expr: Aux_Expr COMMA Expr •  [COMMA, RPAR]

    BITWISEAND  shift, and go to state 59
    BITWISEOR   shift, and go to state 60
    BITWISEXOR  shift, and go to state 61
    AND         shift, and go to state 62
    ASSIGN      shift, and go to state 63
    MUL         shift, and go to state 64
    DIV         shift, and go to state 65
    EQ          shift, and go to state 66
    GE          shift, and go to state 67
    GT          shift, and go to state 68
    LE          shift, and go to state 69
    LT          shift, and go to state 70
    MINUS       shift, and go to state 71
    MOD         shift, and go to state 72
    NE          shift, and go to state 73
    OR          shift, and go to state 74
    PLUS        shift, and go to state 75

    $default  reduce using rule 71 (Aux_Expr)


State 123

   38 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 38 (Statement)


State 124

   36 Statement: IF LPAR Expr RPAR Statement •  [LBRACE, LPAR, MINUS, NOT, PLUS, RBRACE, SEMI, CHAR, WHILE, IF, INT, SHORT, DOUBLE, RETURN, VOID, CHRLIT, IDENTIFIER, NATURAL, DECIMAL]
   37          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 125

    $default  reduce using rule 36 (Statement)

    Conflict between rule 36 and token ELSE resolved as shift (LOW < ELSE).


State 125

   32 Statement: • Expr SEMI
   33          | • SEMI
   34          | • LBRACE RBRACE
   35          | • LBRACE StatList RBRACE
   36          | • IF LPAR Expr RPAR Statement
   37          | • IF LPAR Expr RPAR Statement ELSE Statement
   37          | IF LPAR Expr RPAR Statement ELSE • Statement
   38          | • WHILE LPAR Expr RPAR Statement
   39          | • RETURN SEMI
   40          | • RETURN Expr SEMI
   43 Expr: • Expr ASSIGN Expr
   44     | • Expr PLUS Expr
   45     | • Expr MINUS Expr
   46     | • Expr MUL Expr
   47     | • Expr DIV Expr
   48     | • Expr MOD Expr
   49     | • Expr OR Expr
   50     | • Expr AND Expr
   51     | • Expr BITWISEAND Expr
   52     | • Expr BITWISEOR Expr
   53     | • Expr BITWISEXOR Expr
   54     | • Expr EQ Expr
   55     | • Expr NE Expr
   56     | • Expr LE Expr
   57     | • Expr GE Expr
   58     | • Expr LT Expr
   59     | • Expr GT Expr
   60     | • PLUS Expr
   61     | • MINUS Expr
   62     | • NOT Expr
   63     | • IDENTIFIER LPAR RPAR
   64     | • IDENTIFIER LPAR Aux_Expr RPAR
   65     | • IDENTIFIER
   66     | • NATURAL
   67     | • CHRLIT
   68     | • DECIMAL
   69     | • LPAR Expr RPAR

    LBRACE      shift, and go to state 39
    LPAR        shift, and go to state 27
    MINUS       shift, and go to state 28
    NOT         shift, and go to state 29
    PLUS        shift, and go to state 30
    SEMI        shift, and go to state 41
    WHILE       shift, and go to state 42
    IF          shift, and go to state 43
    RETURN      shift, and go to state 44
    CHRLIT      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NATURAL     shift, and go to state 33
    DECIMAL     shift, and go to state 34

    Statement  go to state 126
    Expr       go to state 49


State 126

   37 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 37 (Statement)
